import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { FiLock, FiUnlock, FiImage, FiSettings, FiLogOut, FiEye, FiEyeOff } from 'react-icons/fi';
import { useLanguage } from '../context/LanguageContext';
import AdminGallery from './AdminGallery';
import './Admin.css';

const Admin = () => {
  const { t, language } = useLanguage();
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [currentSection, setCurrentSection] = useState('gallery');
  const [error, setError] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  
  // Settings state
  const [settings, setSettings] = useState({
    websiteTitle: 'Jabrayilovs Clicks',
    contactEmail: 'nazjabrail@gmail.com',
    phone: '+994555903584',
    instagram: 'https://www.instagram.com/jabrailovsclicks?igsh=MWd4bjJjeTN5bW9mMg==',
    facebook: 'jabrailovsclicks',
    youtube: 'Jabrayilovs Clicks'
  });

  // Simple authentication (in production, use proper authentication)
  const ADMIN_USERNAME = 'nazrin';
  const ADMIN_PASSWORD = 'Nezrin2001%';

  const handleLogin = (e) => {
    e.preventDefault();
    if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {
      setIsAuthenticated(true);
      setError('');
    } else {
      setError(language === 'az' ? 'Yanlƒ±≈ü istifad…ô√ßi adƒ± v…ô ya ≈üifr…ô!' : language === 'ru' ? '–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å!' : language === 'tr' ? 'Yanlƒ±≈ü kullanƒ±cƒ± adƒ± veya ≈üifre!' : 'Incorrect username or password!');
    }
  };

  const handleLogout = () => {
    setIsAuthenticated(false);
    setUsername('');
    setPassword('');
    setCurrentSection('gallery');
  };

  const handleDeploy = async () => {
    try {
      // Deploy status g√∂st…ôr
      const deployStatus = language === 'az' ? 'Deploy edilir...' : language === 'tr' ? 'Yayƒ±nlanƒ±yor...' : 'Deploying...';
      alert(deployStatus);
      
      // Git commit v…ô push - avtomatik
      try {
        // Git add
        const addResponse = await fetch('http://localhost:3001/api/git/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        
        if (!addResponse.ok) {
          throw new Error('Git add failed');
        }
        
        // Git commit
        const commitResponse = await fetch('http://localhost:3001/api/git/commit', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            message: `Admin panel updates - ${new Date().toLocaleString()}`
          })
        });
        
        if (!commitResponse.ok) {
          throw new Error('Git commit failed');
        }
        
        // Git push
        const pushResponse = await fetch('http://localhost:3001/api/git/push', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        
        if (!pushResponse.ok) {
          throw new Error('Git push failed');
        }
        
        // Git uƒüurlu oldu, indi Netlify deploy et
        const deployMessage = language === 'az' 
          ? `‚úÖ Git commit v…ô push uƒüurla tamamlandƒ±!\n\nüåê Sayt: https://jabrayilovsclicks.netlify.app/\n\n‚è±Ô∏è D…ôyi≈üiklikl…ôr 2-3 d…ôqiq…ô …ôrzind…ô canlƒ± olacaq.\n\nüìù D…ôyi≈üiklikl…ôr:\n‚Ä¢ Sayt Ba≈ülƒ±ƒüƒ±: ${settings.websiteTitle}\n‚Ä¢ Email: ${settings.contactEmail}\n‚Ä¢ Telefon: ${settings.phone}\n‚Ä¢ Instagram: ${settings.instagram}\n‚Ä¢ Facebook: ${settings.facebook}\n‚Ä¢ YouTube: ${settings.youtube}`
          : language === 'tr'
          ? `‚úÖ Git commit ve push ba≈üarƒ±yla tamamlandƒ±!\n\nüåê Site: https://jabrayilovsclicks.netlify.app/\n\n‚è±Ô∏è Deƒüi≈üiklikler 2-3 dakika i√ßinde canlƒ± olacak.\n\nüìù Deƒüi≈üiklikler:\n‚Ä¢ Site Ba≈ülƒ±ƒüƒ±: ${settings.websiteTitle}\n‚Ä¢ Email: ${settings.contactEmail}\n‚Ä¢ Telefon: ${settings.phone}\n‚Ä¢ Instagram: ${settings.instagram}\n‚Ä¢ Facebook: ${settings.facebook}\n‚Ä¢ YouTube: ${settings.youtube}`
          : `‚úÖ Git commit and push completed successfully!\n\nüåê Website: https://jabrayilovsclicks.netlify.app/\n\n‚è±Ô∏è Changes will be live in 2-3 minutes.\n\nüìù Changes:\n‚Ä¢ Website Title: ${settings.websiteTitle}\n‚Ä¢ Email: ${settings.contactEmail}\n‚Ä¢ Phone: ${settings.phone}\n‚Ä¢ Instagram: ${settings.instagram}\n‚Ä¢ Facebook: ${settings.facebook}\n‚Ä¢ YouTube: ${settings.youtube}`;
        
        alert(deployMessage);
        
      } catch (gitError) {
        console.error('Git error:', gitError);
        // Git x…ôtasƒ± olsa da, manual deploy t…ôlimatlarƒ± g√∂st…ôr
        const manualDeployMessage = language === 'az' 
          ? `üöÄ Git x…ôtasƒ± ba≈ü verdi. Manual deploy edin:\n\n1. Terminal a√ßƒ±n v…ô bu …ômrl…ôri yazƒ±n:\n   git add .\n   git commit -m "Admin panel updates"\n   git push origin main\n\n2. Netlify Dashboard-a daxil olun:\n   https://app.netlify.com/sites/jabrayilovsclicks\n\n3. "Trigger deploy" d√ºym…ôsin…ô basƒ±n\n\n4. Sayt: https://jabrayilovsclicks.netlify.app/\n\nD…ôyi≈üiklikl…ôr 2-3 d…ôqiq…ô …ôrzind…ô canlƒ± olacaq!`
          : language === 'tr'
          ? `üöÄ Git hatasƒ± olu≈ütu. Manuel deploy edin:\n\n1. Terminal a√ßƒ±n ve bu komutlarƒ± yazƒ±n:\n   git add .\n   git commit -m "Admin panel updates"\n   git push origin main\n\n2. Netlify Dashboard'a gidin:\n   https://app.netlify.com/sites/jabrayilovsclicks\n\n3. "Trigger deploy" d√ºƒümesine tƒ±klayƒ±n\n\n4. Site: https://jabrayilovsclicks.netlify.app/\n\nDeƒüi≈üiklikler 2-3 dakika i√ßinde canlƒ± olacak!`
          : `üöÄ Git error occurred. Please deploy manually:\n\n1. Open terminal and run these commands:\n   git add .\n   git commit -m "Admin panel updates"\n   git push origin main\n\n2. Go to Netlify Dashboard:\n   https://app.netlify.com/sites/jabrayilovsclicks\n\n3. Click "Trigger deploy" button\n\n4. Website: https://jabrayilovsclicks.netlify.app/\n\nChanges will be live in 2-3 minutes!`;
        
        alert(manualDeployMessage);
      }
      
    } catch (error) {
      console.error('Deploy error:', error);
      const errorMessage = language === 'az' 
         ? '‚ùå Deploy x…ôtasƒ± ba≈ü verdi. Z…ôhm…ôt olmasa manual deploy edin.\n\nüìñ DEPLOYMENT_GUIDE.md faylƒ±na baxƒ±n.'
         : language === 'tr'
         ? '‚ùå Yayƒ±nlama hatasƒ± olu≈ütu. L√ºtfen manuel olarak yayƒ±nlayƒ±n.\n\nüìñ DEPLOYMENT_GUIDE.md dosyasƒ±nƒ± kontrol edin.'
         : '‚ùå Deploy error occurred. Please deploy manually.\n\nüìñ Check DEPLOYMENT_GUIDE.md file.';
      alert(errorMessage);
    }
  };

  const handleSettingChange = (field, value) => {
    setSettings(prev => ({
      ...prev,
      [field]: value
    }));
  };

  if (!isAuthenticated) {
    return (
      <div className="admin-login">
        <motion.div 
          className="login-container"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
                     <div className="login-header">
             <FiLock className="lock-icon" />
                           <h2>{language === 'az' ? 'Admin Panel' : language === 'ru' ? '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : language === 'tr' ? 'Admin Paneli' : 'Admin Panel'}</h2>
              <p>{language === 'az' ? 'Qalereya idar…ô etm…ôk √º√ß√ºn daxil olun' : language === 'ru' ? '–í–æ–π–¥–∏—Ç–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–µ–π' : language === 'tr' ? 'Galeriyi y√∂netmek i√ßin giri≈ü yapƒ±n' : 'Login to manage the gallery'}</p>
           </div>
          
          <form onSubmit={handleLogin} className="login-form">
            <div className="input-group">
                             <input
                 type="text"
                 value={username}
                 onChange={(e) => setUsername(e.target.value)}
                                   placeholder={language === 'az' ? 'ƒ∞stifad…ô√ßi adƒ±' : language === 'ru' ? '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' : language === 'tr' ? 'Kullanƒ±cƒ± adƒ±' : 'Username'}
                 required
               />
             </div>
                           <div className="input-group">
                <div className="password-input-container">
                  <input
                    type={showPassword ? "text" : "password"}
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                                         placeholder={language === 'az' ? '≈ûifr…ôni daxil edin' : language === 'ru' ? '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å' : language === 'tr' ? '≈ûifrenizi girin' : 'Enter password'}
                    required
                  />
                  <button
                    type="button"
                    className="password-toggle"
                    onClick={() => setShowPassword(!showPassword)}
                  >
                    {showPassword ? <FiEyeOff /> : <FiEye />}
                  </button>
                </div>
              </div>
            
            {error && <div className="error-message">{error}</div>}
            
                         <motion.button
               type="submit"
               className="login-button"
               whileHover={{ scale: 1.05 }}
               whileTap={{ scale: 0.95 }}
             >
               <FiUnlock />
                               {language === 'az' ? 'Daxil ol' : language === 'ru' ? '–í–æ–π—Ç–∏' : language === 'tr' ? 'Giri≈ü Yap' : 'Login'}
             </motion.button>
          </form>
        </motion.div>
      </div>
    );
  }

  return (
    <div className="admin-panel">
             <div className="admin-header">
                   <h1>{language === 'az' ? 'Admin Panel' : language === 'ru' ? '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' : language === 'tr' ? 'Admin Paneli' : 'Admin Panel'}</h1>
         <motion.button
           className="logout-button"
           onClick={handleLogout}
           whileHover={{ scale: 1.05 }}
           whileTap={{ scale: 0.95 }}
         >
           <FiLogOut />
                       {language === 'az' ? '√áƒ±xƒ±≈ü' : language === 'ru' ? '–í—ã–π—Ç–∏' : language === 'tr' ? '√áƒ±kƒ±≈ü' : 'Logout'}
         </motion.button>
       </div>

      <div className="admin-navigation">
                 <motion.button
           className={`nav-button ${currentSection === 'gallery' ? 'active' : ''}`}
           onClick={() => setCurrentSection('gallery')}
           whileHover={{ scale: 1.05 }}
           whileTap={{ scale: 0.95 }}
         >
           <FiImage />
                       {language === 'az' ? 'Qalereya' : language === 'ru' ? '–ì–∞–ª–µ—Ä–µ—è' : language === 'tr' ? 'Galeri' : 'Gallery'}
         </motion.button>
         
         <motion.button
           className={`nav-button ${currentSection === 'settings' ? 'active' : ''}`}
           onClick={() => setCurrentSection('settings')}
           whileHover={{ scale: 1.05 }}
           whileTap={{ scale: 0.95 }}
         >
           <FiSettings />
                       {language === 'az' ? 'T…ônziml…ôm…ôl…ôr' : language === 'ru' ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' : language === 'tr' ? 'Ayarlar' : 'Settings'}
         </motion.button>
      </div>

      <div className="admin-content">
        {currentSection === 'gallery' && <AdminGallery />}
                 {currentSection === 'settings' && (
           <div className="settings-section">
                           <h3>{language === 'az' ? 'T…ônziml…ôm…ôl…ôr' : language === 'ru' ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' : language === 'tr' ? 'Ayarlar' : 'Settings'}</h3>
             
             <div className="settings-grid">
                               <div className="setting-card">
                  <h4>{language === 'az' ? 'Sayt T…ônziml…ôm…ôl…ôri' : language === 'ru' ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞' : language === 'tr' ? 'Site Ayarlarƒ±' : 'Website Settings'}</h4>
                  <div className="setting-item">
                                         <label>{language === 'az' ? 'Sayt Ba≈ülƒ±ƒüƒ±:' : language === 'ru' ? '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π—Ç–∞:' : language === 'tr' ? 'Site Ba≈ülƒ±ƒüƒ±:' : 'Website Title:'}</label>
                    <input 
                      type="text" 
                      value={settings.websiteTitle}
                      onChange={(e) => handleSettingChange('websiteTitle', e.target.value)}
                    />
                  </div>
                  <div className="setting-item">
                                         <label>{language === 'az' ? '∆èlaq…ô Email:' : language === 'ru' ? '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π Email:' : language === 'tr' ? 'ƒ∞leti≈üim Email:' : 'Contact Email:'}</label>
                    <input 
                      type="email" 
                      value={settings.contactEmail}
                      onChange={(e) => handleSettingChange('contactEmail', e.target.value)}
                    />
                  </div>
                  <div className="setting-item">
                                         <label>{language === 'az' ? 'Telefon:' : language === 'ru' ? '–¢–µ–ª–µ—Ñ–æ–Ω:' : language === 'tr' ? 'Telefon:' : 'Phone:'}</label>
                    <input 
                      type="tel" 
                      value={settings.phone}
                      onChange={(e) => handleSettingChange('phone', e.target.value)}
                    />
                  </div>
                </div>

                <div className="setting-card">
                  <h4>{language === 'az' ? 'Sosial Media' : language === 'ru' ? '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏' : language === 'tr' ? 'Sosyal Medya' : 'Social Media'}</h4>
                  <div className="setting-item">
                    <label>Instagram:</label>
                    <input 
                      type="text" 
                      value={settings.instagram}
                      onChange={(e) => handleSettingChange('instagram', e.target.value)}
                    />
                  </div>
                  <div className="setting-item">
                    <label>Facebook:</label>
                    <input 
                      type="text" 
                      value={settings.facebook}
                      onChange={(e) => handleSettingChange('facebook', e.target.value)}
                    />
                  </div>
                  <div className="setting-item">
                    <label>YouTube:</label>
                    <input 
                      type="text" 
                      value={settings.youtube}
                      onChange={(e) => handleSettingChange('youtube', e.target.value)}
                    />
                  </div>
                </div>

               <div className="setting-card">
                                   <h4>{language === 'az' ? 'Deploy D…ôyi≈üiklikl…ôr' : language === 'ru' ? '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : language === 'tr' ? 'Deƒüi≈üiklikleri Yayƒ±nla' : 'Deploy Changes'}</h4>
                  <p>{language === 'az' ? 'B√ºt√ºn d…ôyi≈üiklikl…ôri canlƒ± sayta y√ºkl…ôyin' : language === 'ru' ? '–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –∂–∏–≤–æ–π —Å–∞–π—Ç' : language === 'tr' ? 'T√ºm deƒüi≈üiklikleri canlƒ± siteye y√ºkleyin' : 'Deploy all changes to live website'}</p>
                 <motion.button
                   className="deploy-button"
                   onClick={handleDeploy}
                   whileHover={{ scale: 1.05 }}
                   whileTap={{ scale: 0.95 }}
                 >
                                       {language === 'az' ? 'Deploy Et' : language === 'ru' ? '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å' : language === 'tr' ? 'Yayƒ±nla' : 'Deploy'}
                 </motion.button>
               </div>
             </div>
           </div>
         )}
      </div>
    </div>
  );
};

export default Admin; 